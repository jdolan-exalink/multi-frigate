services:
  # Backend API Server
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: multi-frigate-backend
    ports:
      - "4000:4000"
    volumes:
      - db_data:/app/DB
      - ./backend/dev-backend.log:/app/dev-backend.log
      - ./backend/dev-backend.err.log:/app/dev-backend.err.log
      - ./backend/dev-backend.out.log:/app/dev-backend.out.log
    environment:
      - NODE_ENV=production
      - PORT=4000
      - DB_PATH=/app/DB/users.db
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:4000/api/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    networks:
      - multi-frigate-network

  # Frontend React Application (Production)
  frontend:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: multi-frigate-frontend
    ports:
      - "80:80"
    volumes:
      - ./env.sh:/app/env.sh
      - ./.env.docker:/app/.env.docker
    environment:
      - FRIGATE_PROXY=http://backend:4000
      - OPENID_SERVER=${OPENID_SERVER:-https://your.server.com:443/realms/your-realm}
      - REALM=${REALM:-frigate-realm}
      - CLIENT_ID=${CLIENT_ID:-frontend-client}
    depends_on:
      backend:
        condition: service_healthy
    restart: unless-stopped
    networks:
      - multi-frigate-network

  # Development Frontend (Optional - for development)
  frontend-dev:
    build:
      context: .
      dockerfile: Dockerfile.dev
    container_name: multi-frigate-frontend-dev
    ports:
      - "3000:3000"
    volumes:
      - .:/app
      - /app/node_modules
      - ./env.sh:/app/env.sh
      - ./.env.docker:/app/.env.docker
    environment:
      - FRIGATE_PROXY=http://backend:4000
      - CHOKIDAR_USEPOLLING=true
      - WATCHPACK_POLLING=true
      - FAST_REFRESH=true
    depends_on:
      - backend
    profiles:
      - development
    networks:
      - multi-frigate-network

networks:
  multi-frigate-network:
    driver: bridge

volumes:
  db_data:
    driver: local