# Configuración de variables de entorno para Multi-Frigate
# Copie este archivo como .env y modifique los valores según su entorno

# === CONFIGURACIÓN DEL SERVIDOR ===
# Puerto para el frontend (producción)
FRONTEND_PORT=80

# Puerto para el backend
BACKEND_PORT=4000
PORT=4000

# Puerto para desarrollo del frontend
DEV_FRONTEND_PORT=3000

# === CONFIGURACIÓN DE SEGURIDAD ===
# Clave secreta para JWT (generar una nueva para producción)
JWT_SECRET=your-super-secret-jwt-key-here-change-this-in-production

# === CONFIGURACIÓN DE BASE DE DATOS ===
# Ruta de la base de datos SQLite
DB_PATH=./DB/users.db

# === CONFIGURACIÓN DE KEYCLOAK/OIDC ===
# URL del servidor OpenID Connect (ej: https://auth.example.com/realms/frigate)
OPENID_SERVER=https://your.keycloak.server.com:443/realms/your-realm

# Nombre del realm en Keycloak
REALM=your-realm-name

# ID del cliente configurado en Keycloak
CLIENT_ID=your-frontend-client-id

# === CONFIGURACIÓN DE FRIGATE ===
# URL base del proxy para servidores Frigate (se configura automáticamente)
FRIGATE_PROXY=http://backend:4000

# === CONFIGURACIÓN DE DESARROLLO ===
# Entorno de Node.js
NODE_ENV=production

# Habilitar hot reload en desarrollo
FAST_REFRESH=true

# Habilitar polling para file watching en Docker
CHOKIDAR_USEPOLLING=true
WATCHPACK_POLLING=true

# Generar source maps en desarrollo
GENERATE_SOURCEMAP=true

# === CONFIGURACIÓN DE LOGS ===
# Nivel de debug para desarrollo
DEBUG=multi-frigate:*

# === CONFIGURACIÓN DE DOCKER ===
# Red de Docker para los servicios
DOCKER_NETWORK=multi-frigate-network

# Configuración de timezone
TZ=America/Argentina/Buenos_Aires

# === CONFIGURACIÓN DE NGINX ===
# Configuración de worker processes para nginx
NGINX_WORKER_PROCESSES=auto

# === VARIABLES OPCIONALES ===
# Configurar si se ejecuta detrás de un proxy reverso
PROXY_PASS_ENABLED=false

# Configurar dominio personalizado
CUSTOM_DOMAIN=localhost

# Configurar SSL (para producción)
SSL_ENABLED=false
SSL_CERT_PATH=/path/to/cert.pem
SSL_KEY_PATH=/path/to/key.pem