const en = {
    mainPage: {
        createSelectTags: 'Create/Select tags',
        tagsError: 'Cannot be longer than 10 characters',
    },
    editCameraPage: {
        notFrigateCamera: 'Not a Frigate camera',
        errorAtPut: 'Error while sending mask',
        cameraIdNotExist: 'Camera id does not exist',
        cameraConfigNotExist: 'Camera config does not exist',
        width: 'Width',
        height: 'Height',
        points: 'Points',
    },
    eventsPage: {
        selectStartTime: 'Select start time:',
        selectEndTime: 'Select end time:',
        startTimeBiggerThanEnd: 'Start time cannot be later than end time',
        dateRangeLimited: 'Date range limited',
        dateRangeLimitedMessage: 'Date range has been limited to {{days}} days to prevent performance issues.',
    },
    frigateConfigPage: {
        copyConfig: 'Copy config',
        saveOnly: 'Save only',
        saveAndRestart: 'Save & restart',
        editorNotExist: 'Editor does not exist',
    },
    settingsPage: {
        oidpClientId: 'OIDP client ID',
        oidpClientIdPH: 'frigate-cli',
        clientSecret: 'OIDP client secret',
        clientSecretPH: 'Secret from the OIDP client',
        clientUsername: 'OIDP client username',
        clientUsernamePH: 'frigate-admin@yourmail.com',
        clientPassword: 'OIDP client password',
        clientPasswordPH: 'Password on the OIDP server',
        realmUrl: 'OIDP realm URL',
        realmUrlPH: 'https://your.oidp.server.com/realms/frigate-realm',
        adminRole: 'Select admin role',
        birdseyeRole: 'Select Birdseye role',
        emptyRolesNotify: 'Role list is empty. You can manually trigger an update on the server:',
        updateRoles: 'Update roles',
    },
    systemPage: {
        cameraStats: 'Camera stats',
        storageStats: 'Storage stats',
    },
    detectorCard: {
        pid: 'PID',
        inferenceSpeed: 'Inference speed',
        memory: 'Memory',
    },
    gpuStatCard: {
        gpu: 'GPU',
        memory: 'Memory',
        decoder: 'Decoder',
        encoder: 'Encoder',
    },
    cameraStorageTable: {
        usage: 'Usage',
        usagePercent: 'Usage %',
        sreamBandwidth: 'Stream bandwidth',
        total: 'Total',
    },
    cameraStatTable: {
        process: 'Process',
        pid: 'PID',
        fps: 'FPS',
        cpu: 'CPU %',
        memory: 'Memory %',
    },
    hostMenu: {
        editConfig: 'Edit config',
        restart: 'Restart',
        system: 'System',
        storage: 'Storage',
    },
    header: {
        home: 'Main',
        settings: 'Settings',
        recordings: 'Recordings',
        events: 'Events',
        hostsConfig: 'Frigate servers',
        acessSettings: 'Access settings',
    },
    frigateHostTableTitles: {
        host: 'Host',
        name: 'Name',
        url: 'URL',
        enabled: 'Enabled',
    },
    frigateHostTablePlaceholders: {
        host: 'http://host.docker.internal:5000 or http://192.168.1.1:5000',
        name: 'Your Frigate host name',
    },
    player: {
        startVideo: 'Enable video',
        stopVideo: 'Disable video',
        object: 'Object',
        duration: 'Duration',
        startTime: 'Start',
        endTime: 'End',
        doubleClickToFullHint: 'Double click for fullscreen',
        rating: 'Rating',
    },
    preparingVideo: 'Preparing video...',
    download: 'Download',
    maxRetries: 'Error: Unable to fetch data after {{maxRetries}} retries. Please try again later or narrow the period.',
    config: 'Config',
    create: 'Create',
    clear: 'Clear',
    edit: 'Edit',
    version: 'Version',
    uptime: 'Uptime',
    pleaseSelectRole: 'Please select a role',
    pleaseSelectHost: 'Please select a host',
    pleaseSelectCamera: 'Please select a camera',
    pleaseSelectDate: 'Please select a date',
    nothingHere: 'Nothing here',
    allowed: 'Allowed',
    notAllowed: 'Not allowed',
    camera: 'Camera',
    camersDoesNotExist: 'No cameras',
    search: 'Search',
    recordings: 'Recordings',
    day: 'Day',
    hour: 'Hour',
    minute: 'Minute',
    second: 'Second',
    events: 'Events',
    notHaveEvents: 'No events',
    notHaveEventsAtThatPeriod: 'No events for the selected period',
    selectHost: 'Select host',
    selectCamera: 'Select camera',
    selectRange: 'Select period',
    changeTheme: 'Change theme',
    logout: 'Logout',
    enterQuantity: 'Enter quantity:',
    quantity: 'Quantity',
    tooltipClose: 'Press Enter',
    hide: 'Hide',
    confirm: 'Confirm',
    save: 'Save',
    discard: 'Cancel',
    next: 'Next',
    back: 'Back',
    goToMainPage: 'Return to main page',
    retry: 'Retry',
    youCanRetryOrGoToMain: 'You can retry or return to the main page',
    successfully: 'Successfully',
    successfullySaved: 'Saved successfully',
    successfullyUpdated: 'Updated successfully',
    error: 'Error',
    errors: {
        emptyResponse: 'Empty response',
        somthingGoesWrong: 'Something went wrong',
        403: 'Sorry, you do not have access',
        404: 'Sorry, we cannot find that page',
    },
}

export default en
